{"ast":null,"code":"\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nvar _es = require(\"./es2015\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: {}\n});\n(0, _utils.default)(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\"],\n  fields: Object.assign({}, _es.classMethodOrPropertyCommon, {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\n(0, _utils.default)(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        return function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      }()\n    },\n    computed: {\n      default: false\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\")))\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\"],\n  builder: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"Private\"],\n  fields: Object.assign({}, _es.classMethodOrDeclareMethodCommon, {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\n(0, _utils.default)(\"Import\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});","map":{"version":3,"sources":["/Users/lancer_abir/Desktop/react-app-01/node_modules/@babel/types/lib/definitions/experimental.js"],"names":["_utils","_interopRequireWildcard","require","_es","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","default","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","builder","visitor","aliases","fields","argument","validate","assertNodeType","assign","classMethodOrPropertyCommon","value","optional","definite","assertValueType","typeAnnotation","decorators","chain","assertEach","readonly","declare","object","property","normal","computed","node","val","validator","expression","callee","arguments","typeArguments","typeParameters","classMethodOrDeclareMethodCommon","body","exported","id"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nvar _es = require(\"./es2015\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: {}\n});\n(0, _utils.default)(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\"],\n  fields: Object.assign({}, _es.classMethodOrPropertyCommon, {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\n(0, _utils.default)(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        return function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      }()\n    },\n    computed: {\n      default: false\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\")))\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\"],\n  builder: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"Private\"],\n  fields: Object.assign({}, _es.classMethodOrDeclareMethodCommon, {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\n(0, _utils.default)(\"Import\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});"]},"metadata":{},"sourceType":"script"}