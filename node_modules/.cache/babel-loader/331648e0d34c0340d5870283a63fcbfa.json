{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.typeIs = typeIs;\nexports.validateType = validateType;\nexports.validateOptional = validateOptional;\nexports.validateOptionalType = validateOptionalType;\nexports.arrayOf = arrayOf;\nexports.arrayOfType = arrayOfType;\nexports.validateArrayOfType = validateArrayOfType;\nexports.assertEach = assertEach;\nexports.assertOneOf = assertOneOf;\nexports.assertNodeType = assertNodeType;\nexports.assertNodeOrValueType = assertNodeOrValueType;\nexports.assertValueType = assertValueType;\nexports.assertShape = assertShape;\nexports.chain = chain;\nexports.default = defineType;\nexports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.FLIPPED_ALIAS_KEYS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = void 0;\n\nvar _is = _interopRequireDefault(require(\"../validators/is\"));\n\nvar _validate = require(\"../validators/validate\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst VISITOR_KEYS = {};\nexports.VISITOR_KEYS = VISITOR_KEYS;\nconst ALIAS_KEYS = {};\nexports.ALIAS_KEYS = ALIAS_KEYS;\nconst FLIPPED_ALIAS_KEYS = {};\nexports.FLIPPED_ALIAS_KEYS = FLIPPED_ALIAS_KEYS;\nconst NODE_FIELDS = {};\nexports.NODE_FIELDS = NODE_FIELDS;\nconst BUILDER_KEYS = {};\nexports.BUILDER_KEYS = BUILDER_KEYS;\nconst DEPRECATED_KEYS = {};\nexports.DEPRECATED_KEYS = DEPRECATED_KEYS;\n\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else if (val === undefined) {\n    return \"undefined\";\n  } else {\n    return typeof val;\n  }\n}\n\nfunction validate(validate) {\n  return {\n    validate\n  };\n}\n\nfunction typeIs(typeName) {\n  return typeof typeName === \"string\" ? assertNodeType(typeName) : assertNodeType(...typeName);\n}\n\nfunction validateType(typeName) {\n  return validate(typeIs(typeName));\n}\n\nfunction validateOptional(validate) {\n  return {\n    validate,\n    optional: true\n  };\n}\n\nfunction validateOptionalType(typeName) {\n  return {\n    validate: typeIs(typeName),\n    optional: true\n  };\n}\n\nfunction arrayOf(elementType) {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nfunction arrayOfType(typeName) {\n  return arrayOf(typeIs(typeName));\n}\n\nfunction validateArrayOfType(typeName) {\n  return validate(arrayOfType(typeName));\n}\n\nfunction assertEach(callback) {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      callback(node, `${key}[${i}]`, val[i]);\n    }\n  }\n\n  validator.each = callback;\n  return validator;\n}\n\nfunction assertOneOf(...values) {\n  function validate(node, key, val) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(`Property ${key} expected value to be one of ${JSON.stringify(values)} but got ${JSON.stringify(val)}`);\n    }\n  }\n\n  validate.oneOf = values;\n  return validate;\n}\n\nfunction assertNodeType(...types) {\n  function validate(node, key, val) {\n    let valid = false;\n\n    for (const type of types) {\n      if ((0, _is.default)(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} ` + `but instead got ${JSON.stringify(val && val.type)}`);\n    }\n  }\n\n  validate.oneOfNodeTypes = types;\n  return validate;\n}\n\nfunction assertNodeOrValueType(...types) {\n  function validate(node, key, val) {\n    let valid = false;\n\n    for (const type of types) {\n      if (getType(val) === type || (0, _is.default)(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} ` + `but instead got ${JSON.stringify(val && val.type)}`);\n    }\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n  return validate;\n}\n\nfunction assertValueType(type) {\n  function validate(node, key, val) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} expected type of ${type} but got ${getType(val)}`);\n    }\n  }\n\n  validate.type = type;\n  return validate;\n}\n\nfunction assertShape(shape) {\n  function validate(node, key, val) {\n    const errors = [];\n\n    for (const property of Object.keys(shape)) {\n      try {\n        (0, _validate.validateField)(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n\n        throw error;\n      }\n    }\n\n    if (errors.length) {\n      throw new TypeError(`Property ${key} of ${node.type} expected to have the following:\\n${errors.join(\"\\n\")}`);\n    }\n  }\n\n  validate.shapeOf = shape;\n  return validate;\n}\n\nfunction chain(...fns) {\n  function validate(...args) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n\n  validate.chainOf = fns;\n  return validate;\n}\n\nfunction defineType(type, opts = {}) {\n  const inherits = opts.inherits && store[opts.inherits] || {};\n  const fields = opts.fields || inherits.fields || {};\n  const visitor = opts.visitor || inherits.visitor || [];\n  const aliases = opts.aliases || inherits.aliases || [];\n  const builder = opts.builder || inherits.builder || opts.visitor || [];\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\n  }\n\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate) {\n      field.validate = assertValueType(getType(field.default));\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type);\n  });\n  store[type] = opts;\n}\n\nconst store = {};","map":{"version":3,"sources":["/Users/lancer_abir/Desktop/react-app-01/node_modules/@babel/types/lib/definitions/utils.js"],"names":["Object","defineProperty","exports","value","validate","typeIs","validateType","validateOptional","validateOptionalType","arrayOf","arrayOfType","validateArrayOfType","assertEach","assertOneOf","assertNodeType","assertNodeOrValueType","assertValueType","assertShape","chain","default","defineType","DEPRECATED_KEYS","BUILDER_KEYS","NODE_FIELDS","FLIPPED_ALIAS_KEYS","ALIAS_KEYS","VISITOR_KEYS","_is","_interopRequireDefault","require","_validate","obj","__esModule","getType","val","Array","isArray","undefined","typeName","optional","elementType","callback","validator","node","key","i","length","each","values","indexOf","TypeError","JSON","stringify","oneOf","types","valid","type","oneOfNodeTypes","oneOfNodeOrValueTypes","shape","errors","property","keys","validateField","error","push","message","join","shapeOf","fns","args","fn","chainOf","opts","inherits","store","fields","visitor","aliases","builder","deprecatedAlias","concat","field","forEach","alias"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.typeIs = typeIs;\nexports.validateType = validateType;\nexports.validateOptional = validateOptional;\nexports.validateOptionalType = validateOptionalType;\nexports.arrayOf = arrayOf;\nexports.arrayOfType = arrayOfType;\nexports.validateArrayOfType = validateArrayOfType;\nexports.assertEach = assertEach;\nexports.assertOneOf = assertOneOf;\nexports.assertNodeType = assertNodeType;\nexports.assertNodeOrValueType = assertNodeOrValueType;\nexports.assertValueType = assertValueType;\nexports.assertShape = assertShape;\nexports.chain = chain;\nexports.default = defineType;\nexports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.FLIPPED_ALIAS_KEYS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = void 0;\n\nvar _is = _interopRequireDefault(require(\"../validators/is\"));\n\nvar _validate = require(\"../validators/validate\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst VISITOR_KEYS = {};\nexports.VISITOR_KEYS = VISITOR_KEYS;\nconst ALIAS_KEYS = {};\nexports.ALIAS_KEYS = ALIAS_KEYS;\nconst FLIPPED_ALIAS_KEYS = {};\nexports.FLIPPED_ALIAS_KEYS = FLIPPED_ALIAS_KEYS;\nconst NODE_FIELDS = {};\nexports.NODE_FIELDS = NODE_FIELDS;\nconst BUILDER_KEYS = {};\nexports.BUILDER_KEYS = BUILDER_KEYS;\nconst DEPRECATED_KEYS = {};\nexports.DEPRECATED_KEYS = DEPRECATED_KEYS;\n\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else if (val === undefined) {\n    return \"undefined\";\n  } else {\n    return typeof val;\n  }\n}\n\nfunction validate(validate) {\n  return {\n    validate\n  };\n}\n\nfunction typeIs(typeName) {\n  return typeof typeName === \"string\" ? assertNodeType(typeName) : assertNodeType(...typeName);\n}\n\nfunction validateType(typeName) {\n  return validate(typeIs(typeName));\n}\n\nfunction validateOptional(validate) {\n  return {\n    validate,\n    optional: true\n  };\n}\n\nfunction validateOptionalType(typeName) {\n  return {\n    validate: typeIs(typeName),\n    optional: true\n  };\n}\n\nfunction arrayOf(elementType) {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nfunction arrayOfType(typeName) {\n  return arrayOf(typeIs(typeName));\n}\n\nfunction validateArrayOfType(typeName) {\n  return validate(arrayOfType(typeName));\n}\n\nfunction assertEach(callback) {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      callback(node, `${key}[${i}]`, val[i]);\n    }\n  }\n\n  validator.each = callback;\n  return validator;\n}\n\nfunction assertOneOf(...values) {\n  function validate(node, key, val) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(`Property ${key} expected value to be one of ${JSON.stringify(values)} but got ${JSON.stringify(val)}`);\n    }\n  }\n\n  validate.oneOf = values;\n  return validate;\n}\n\nfunction assertNodeType(...types) {\n  function validate(node, key, val) {\n    let valid = false;\n\n    for (const type of types) {\n      if ((0, _is.default)(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} ` + `but instead got ${JSON.stringify(val && val.type)}`);\n    }\n  }\n\n  validate.oneOfNodeTypes = types;\n  return validate;\n}\n\nfunction assertNodeOrValueType(...types) {\n  function validate(node, key, val) {\n    let valid = false;\n\n    for (const type of types) {\n      if (getType(val) === type || (0, _is.default)(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} ` + `but instead got ${JSON.stringify(val && val.type)}`);\n    }\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n  return validate;\n}\n\nfunction assertValueType(type) {\n  function validate(node, key, val) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} expected type of ${type} but got ${getType(val)}`);\n    }\n  }\n\n  validate.type = type;\n  return validate;\n}\n\nfunction assertShape(shape) {\n  function validate(node, key, val) {\n    const errors = [];\n\n    for (const property of Object.keys(shape)) {\n      try {\n        (0, _validate.validateField)(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n\n        throw error;\n      }\n    }\n\n    if (errors.length) {\n      throw new TypeError(`Property ${key} of ${node.type} expected to have the following:\\n${errors.join(\"\\n\")}`);\n    }\n  }\n\n  validate.shapeOf = shape;\n  return validate;\n}\n\nfunction chain(...fns) {\n  function validate(...args) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n\n  validate.chainOf = fns;\n  return validate;\n}\n\nfunction defineType(type, opts = {}) {\n  const inherits = opts.inherits && store[opts.inherits] || {};\n  const fields = opts.fields || inherits.fields || {};\n  const visitor = opts.visitor || inherits.visitor || [];\n  const aliases = opts.aliases || inherits.aliases || [];\n  const builder = opts.builder || inherits.builder || opts.visitor || [];\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\n  }\n\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate) {\n      field.validate = assertValueType(getType(field.default));\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type);\n  });\n  store[type] = opts;\n}\n\nconst store = {};"]},"metadata":{},"sourceType":"script"}